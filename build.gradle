plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.9.6"
}

repositories {
    mavenCentral()
}

def selenideVersion = "6.1.2",
    junitVersion = "5.8.2",
    slf4jVersion = "1.7.33",
    junitParamVersion = "5.8.2",
    javaFakerVersion = "1.0.2",
    allureVersion = '2.17.2',
    allureSelenideVersion = '2.17.2',
    assertJVersion = '3.22.0',
    pdfTestVersion = '1.7.0',
    xlsTestVersion = '1.4.3',
    openCsvVersion = '5.5.2'

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        autoconfigure.set(true)
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitParamVersion",
            "com.github.javafaker:javafaker:$javaFakerVersion",
            "io.qameta.allure:allure-selenide:$allureSelenideVersion",
            "org.assertj:assertj-core:$assertJVersion",
            "com.codeborne:pdf-test:$pdfTestVersion",
            "com.codeborne:xls-test:$xlsTestVersion",
            "com.opencsv:opencsv:$openCsvVersion"
    )
    testRuntimeOnly(
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = true
        exceptionFormat = "short"
    }
    test.outputs.upToDateWhen { false }
}

// Run all tests methods inside one specific class ->
// ./gradlew clean test --tests PositiveTests OR gradle clean test --tests PositiveTests

// Run all test classes in one specific package ->
// gradle clean test --tests "domain.com.homework_7.lesson.*" OR ./gradlew clean test --tests "domain.com.homework_7.lesson.*"

// Run homework
// gradle clean test --tests StudentRegistrationFormTest